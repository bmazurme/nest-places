name: Push To Yandex Cloud CR

on:
  push:
    branches:
      - main
  release:
    types:
      - created
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Yandex Cloud CR Login
        uses: yc-actions/yc-cr-login@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build and push Docker image
        env:
          CR_HOST: ${{ secrets.CR_HOST }}
          CR_REGISTRY: ${{ secrets.CR_REGISTRY }}
          CR_IMAGE: ${{ secrets.CR_IMAGE }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build \
            -t "$CR_HOST/$CR_REGISTRY/$CR_IMAGE:$IMAGE_TAG" \
            -t "$CR_HOST/$CR_REGISTRY/$CR_IMAGE:latest" .
          docker push "$CR_HOST/$CR_REGISTRY/$CR_IMAGE:$IMAGE_TAG"
          docker push "$CR_HOST/$CR_REGISTRY/$CR_IMAGE:latest"

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Deploy COI VM
        id: deploy-coi
        uses: yc-actions/yc-coi-deploy@main
        env:
          IMAGE_URL: ${{ secrets.CR_HOST }}/${{ secrets.CR_REGISTRY }}/${{ secrets.CR_IMAGE }}:${{ github.sha }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          folder-id: ${{ secrets.YC_FOLDER_ID }}
          vm-name: ${{ secrets.YC_VM_NAME }}
          vm-service-account-id: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
          vm-subnet-id: ${{ secrets.YC_SUBNET_ID }}
          vm-cores: 2
          # vm-platform-id: 'standard-v2'
          vm-memory: 2Gb
          vm-disk-size: 30Gb
          # vm-core-fraction: 5
          vm-core-fraction: 20
          user-data-path: './yc/user-data.yaml'
          docker-compose-path: './yc/main/docker-compose.yaml'

