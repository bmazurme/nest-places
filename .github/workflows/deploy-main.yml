name: Push To Yandex Cloud CR

on:
  push:
    branches:
      - main
  release:
    types:
      - created
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Yandex Cloud CR Login
        uses: yc-actions/yc-cr-login@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build and push Docker image
        env:
          CR_HOST: ${{ secrets.CR_HOST }}
          CR_REGISTRY: ${{ secrets.CR_REGISTRY }}
          CR_IMAGE: ${{ secrets.CR_IMAGE }}
          IMAGE_TAG: ${{ github.sha }}
        
        run: |
          cat <<EOF > .env
          POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          CLIENT_YANDEX_ID=${{ secrets.CLIENT_YANDEX_ID }}
          CLIENT_YANDEX_SECRET=${{ secrets.CLIENT_YANDEX_SECRET }}
          MINIO_ENDPOINT=${{ secrets.MINIO_ENDPOINT }}
          MINIO_PORT=${{ secrets.MINIO_PORT }}
          MINIO_ACCESS_KEY=${{ secrets.MINIO_ACCESS_KEY }}
          MINIO_SECRET_KEY=${{ secrets.MINIO_SECRET_KEY }}
          EOF
          
          docker build \
            -t "$CR_HOST/$CR_REGISTRY/$CR_IMAGE:$IMAGE_TAG" \
            -t "$CR_HOST/$CR_REGISTRY/$CR_IMAGE:latest" .
          docker push "$CR_HOST/$CR_REGISTRY/$CR_IMAGE:$IMAGE_TAG"
          docker push "$CR_HOST/$CR_REGISTRY/$CR_IMAGE:latest"


  deploy:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Deploy COI VM
        id: deploy-coi
        uses: yc-actions/yc-coi-deploy@b22db2965c8af6bf0980e8b026c5e80ad6e15adf
        # env:
        #   IMAGE_URL: cr.yandex/${{ secrets.CR_REGISTRY }}/${{ secrets.CR_IMAGE }}:${{ github.sha }}
        #   SSH_KEY: ${{ secrets.SSH_KEY }}
        #   YC_VM_USERNAME: ${{ secrets.YC_VM_USERNAME }}
        #   POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
        #   POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
        #   POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        #   POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        #   POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        #   TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
        #   TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        #   JWT_SECRET: ${{ secrets.JWT_SECRET }}
        #   CLIENT_YANDEX_ID: ${{ secrets.CLIENT_YANDEX_ID }}
        #   CLIENT_YANDEX_SECRET: ${{ secrets.CLIENT_YANDEX_SECRET }}
        #   MINIO_ENDPOINT: ${{ secrets.MINIO_ENDPOINT }}
        #   MINIO_PORT: ${{ secrets.MINIO_PORT }}
        #   MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
        #   MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          folder-id: ${{ secrets.YC_FOLDER_ID }}
          vm-name: ${{ secrets.YC_VM_NAME }}
          vm-service-account-id: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
          vm-subnet-id: ${{ secrets.YC_SUBNET_ID }}
          vm-cores: 2
          vm-platform-id: 'standard-v2'
          vm-memory: 2Gb
          vm-disk-size: 30Gb
          vm-core-fraction: 5
          user-data-path: './yc/user-data.yaml'
          docker-compose-path: './yc/main/docker-compose.yaml'

      - name: Send secrets to VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ steps.deploy-coi.outputs.public-ip }}
          username: ${{ secrets.YC_VM_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # mkdir -p /app/secrets

            echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" > .env
            echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env
            echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
            echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
            echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
            echo "TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }}" >> .env
            echo "TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }}" >> .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
            echo "CLIENT_YANDEX_ID=${{ secrets.CLIENT_YANDEX_ID }}" >> .env
            echo "CLIENT_YANDEX_SECRET=${{ secrets.CLIENT_YANDEX_SECRET }}" >> .env
            echo "MINIO_ENDPOINT=${{ secrets.MINIO_ENDPOINT }}" >> .env
            echo "MINIO_PORT=${{ secrets.MINIO_PORT }}" >> .env
            echo "MINIO_ACCESS_KEY=${{ secrets.MINIO_ACCESS_KEY }}" >> .env
            echo "MINIO_SECRET_KEY=${{ secrets.MINIO_SECRET_KEY }}" >> .env
            
            chmod 600 .env
            chown app-user:app-user .env
