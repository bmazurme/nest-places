version: '3.7'
services:
  backend:
    container_name: backend-core
    image: {{ env.IMAGE_URL }}
    networks:
      - internal-network
      - internet
    env_file:
      - /data/.env
    ports:
      - 3000:3000
    depends_on:
      - postgres
      - minio
      # - grafana
      # - loki
    restart: unless-stopped


  postgres:
    image: postgres:13.2-alpine
    ports:
      - 5432:5432
    volumes:
      - /postgresdata:/var/lib/postgresql/data
      - /migrations/dbinit.sql:/docker-entrypoint-initdb.d/dbinit.sql
    restart: always
    env_file:
      - /data/.env
    networks:
      - internal-network
      - internet
    deploy:
      resources:
        limits:
          memory: 2GB
      restart_policy:
        condition: on-failure

  pgadmin:
    image: dpage/pgadmin4:4.18
    restart: always
    env_file:
      - /data/.env
    ports:
      - 8080:80
    volumes:
      - /pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - internet

  minio:
    image: cr.yandex/crpfap56bqr8nkph7d9g/minio:2024.11.7
    restart: always
    ports:
      - 9000:9000
      - 8000:8000
    env_file:
      - /data/.env
    volumes:
      - /minio-data:/bitnami/minio/data
    networks:
      - internet

  # loki:
  #   image: grafana/loki:latest
  #   ports:
  #     - "3100:3100"
  #   command: -config.file=/etc/loki/local-config.yaml
  #   volumes:
  #     - loki_data:/loki
  #   healthcheck:
  #     test: ["CMD-SHELL", "wget -q --tries=1 -O- http://localhost:3100/ready"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   restart: unless-stopped
  #   networks:
  #     - internet
  #   deploy:
  #     replicas: 1
  #     update_config:
  #       parallelism: 1
  #       delay: 10s

  # grafana:
  #   image: grafana/grafana:latest
  #   ports:
  #     - "3200:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=admin
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   depends_on:
  #     - loki
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #   healthcheck:
  #     test: ["CMD-SHELL", "wget -q --tries=1 -O- http://localhost:3000/api/health"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   restart: unless-stopped
  #   networks:
  #     - internet
  #   deploy:
  #     replicas: 1
  #     update_config:
  #       parallelism: 1
  #       delay: 10s

volumes:
  postgresdata:
    driver: local
  pgadmin-data:
    driver: local
  minio-data:
    driver: local
  # loki_data:
  #   driver: local
  # grafana_data:
  #   driver: local

networks:
  internal-network:
    driver: bridge
    internal: true
  internet:
    driver: bridge
