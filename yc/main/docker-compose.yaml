version: '3.7'
services:
  # tools_dev:
  #   container_name: tools
  #   image: {{ env.IMAGE_URL }}
  #   restart: always
  #   ports:
  #     - '3000:3000'
  backend:
    # container_name: compose-back-container
    image: {{ env.IMAGE_URL }}
    networks:
      - internal-network
      - internet
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-newPassword}
      - POSTGRES_DB=${POSTGRES_DB:-my-db-name}
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - JWT_SECRET=${JWT_SECRET}
      - CLIENT_YANDEX_ID=${CLIENT_YANDEX_ID}
      - CLIENT_YANDEX_SECRET=${CLIENT_YANDEX_SECRET}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_PORT=${MINIO_PORT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}

    ports:
      - "3000:3000"
    depends_on:
      - postgres
      # - minio
      # - grafana
      # - loki
    restart: unless-stopped

  postgres:
    image: postgres:13.2-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgresdata:/var/lib/postgresql/data
      - ./migrations/dbinit.sql:/docker-entrypoint-initdb.d/dbinit.sql
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-newPassword}
      POSTGRES_DB: ${POSTGRES_DB:-my-db-name}
    networks:
      - internal-network
      - internet
    deploy:
      resources:
        limits:
          memory: 2GB
      restart_policy:
        condition: on-failure

  pgadmin:
    image: dpage/pgadmin4:4.18
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: secret
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - internal-network
      - internet
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s


  # minio:
  #   image: cr.yandex/crpfap56bqr8nkph7d9g/minio:2024.11.7 # bitnami/minio:2024.11.7
  #   restart: always
  #   ports:
  #     - '9000:9000'
  #     - '8000:8000'
  #   environment:
  #     MINIO_ROOT_USER: ${MINIO_ROOT_USER:-admin}
  #     MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-very-hard-password}
  #     MINIO_DEFAULT_BUCKETS: 'main'
  #     MINIO_API_PORT_NUMBER: 9000
  #     MINIO_CONSOLE_PORT_NUMBER: 8000
  #   volumes:
  #     - minio-data:/bitnami/minio/data
  #   networks:
  #     - internet
  #     - internet
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 4GB

  # loki:
  #   image: grafana/loki:latest
  #   ports:
  #     - "3100:3100"
  #   command: -config.file=/etc/loki/local-config.yaml
  #   volumes:
  #     - loki_data:/loki
  #   healthcheck:
  #     test: ["CMD-SHELL", "wget -q --tries=1 -O- http://localhost:3100/ready"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   restart: unless-stopped
  #   networks:
  #     - internet
  #   deploy:
  #     replicas: 1
  #     update_config:
  #       parallelism: 1
  #       delay: 10s


  # grafana:
  #   image: grafana/grafana:latest
  #   ports:
  #     - "3200:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=admin
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   depends_on:
  #     - loki
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #   healthcheck:
  #     test: ["CMD-SHELL", "wget -q --tries=1 -O- http://localhost:3000/api/health"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   restart: unless-stopped
  #   networks:
  #     - internet
  #   deploy:
  #     replicas: 1
  #     update_config:
  #       parallelism: 1
  #       delay: 10s

volumes:
  postgresdata:
    driver: local
  pgadmin-data:
    driver: local
  minio-data:
    driver: local
  # loki_data:
  #   driver: local
  # grafana_data:
  #   driver: local

networks:
  internal-network:
    driver: bridge
    internal: true
  internet:
    driver: bridge
